@page "/hero"
@page "/hero/{id:int}"
@inject ISuperHeroService SuperHeroService

@if (Id == null)
{
    <PageTitle>New Super hero</PageTitle>
    <h3>Add a new Super Hero</h3>
}
else
{
    <PageTitle>Edit @hero.HeroName</PageTitle>
    <h3>Edit @hero.HeroName</h3>
}

<EditForm Model="hero" OnSubmit="HandleSubmit">
    <div>
        <label for="firstname">First Name</label>
        <InputText id="firstname" @bind-Value=hero.FirstName class="form-control"></InputText>
    </div>
    <div>
        <label for="lastname">Last Name</label>
        <InputText id="lastname" @bind-Value=hero.LastName class="form-control"></InputText>
    </div>
    <div>
        <label for="heroname">Hero Name</label>
        <InputText id="heroname" @bind-Value=hero.HeroName class="form-control"></InputText>
    </div>
    <div>
        <label>Comic</label><br />
        <InputSelect @bind-Value="hero.ComicId" class="form-select">
            @foreach (var comic in SuperHeroService.Comics)
           {
               <option value="@comic.Id">@comic.Name</option>
           }
        </InputSelect>
    </div>
    <br />
    <button type="submit" class=" btn btn-primary">@btnText</button>
    <button type="button" class=" btn btn-danger" @onclick="DeleteSuperHero"> Delete Hero</button>
</EditForm>

@code {
    [Parameter]
    public int? Id{ get; set; }

    string btnText = string.Empty;

    Superhero hero = new Superhero { Comic = new Comic() };

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Create Hero" : "Update Hero";
        await SuperHeroService.GetComics();
    }
    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
            hero.Comic = SuperHeroService.Comics[0];
            hero.ComicId = hero.ComicId;

        }
        else
        {
            hero = await SuperHeroService.GetSingleHero((int)Id);
        }
    }
    async Task HandleSubmit()
    {
        if (Id ==null)
        {
            await SuperHeroService.CreateSuperHero(hero);
        }
        else
        {
            await SuperHeroService.UpdateSuperHero(hero);
        }
    }

    async Task DeleteSuperHero()
    {
        await SuperHeroService.DeleteSuperHero(hero.Id);
    }
}
